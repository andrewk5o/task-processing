{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ngxs/form-plugin/fesm2022/ngxs-form-plugin.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, inject, ChangeDetectorRef, DestroyRef, Input, Directive, NgModule } from '@angular/core';\nimport { Actions, Store, ofActionDispatched, withNgxsPlugin } from '@ngxs/store';\nimport { getActionTypeFromInstance, setValue, getValue } from '@ngxs/store/plugins';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormGroupDirective } from '@angular/forms';\nimport { distinctUntilChanged, debounceTime } from 'rxjs';\nclass UpdateFormStatus {\n  payload;\n  static type = '[Forms] Update Form Status';\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nclass UpdateFormValue {\n  payload;\n  static type = '[Forms] Update Form Value';\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nclass UpdateForm {\n  payload;\n  static type = '[Forms] Update Form';\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nclass UpdateFormDirty {\n  payload;\n  static type = '[Forms] Update Form Dirty';\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nclass SetFormDirty {\n  payload;\n  static type = '[Forms] Set Form Dirty';\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nclass SetFormPristine {\n  payload;\n  static type = '[Forms] Set Form Pristine';\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nclass UpdateFormErrors {\n  payload;\n  static type = '[Forms] Update Form Errors';\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nclass SetFormDisabled {\n  payload;\n  static type = '[Forms] Set Form Disabled';\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nclass SetFormEnabled {\n  payload;\n  static type = '[Forms] Set Form Enabled';\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nclass ResetForm {\n  payload;\n  static type = '[Forms] Reset Form';\n  constructor(payload) {\n    this.payload = payload;\n  }\n}\nclass NgxsFormPlugin {\n  handle(state, event, next) {\n    const type = getActionTypeFromInstance(event);\n    let nextState = state;\n    if (type === UpdateFormValue.type || type === UpdateForm.type || type === ResetForm.type) {\n      const {\n        value\n      } = event.payload;\n      const payloadValue = Array.isArray(value) ? value.slice() : isObjectLike(value) ? {\n        ...value\n      } : value;\n      const path = this.joinPathWithPropertyPath(event);\n      nextState = setValue(nextState, path, payloadValue);\n    }\n    if (type === ResetForm.type) {\n      const model = getValue(nextState, `${event.payload.path}.model`);\n      nextState = setValue(nextState, `${event.payload.path}`, {\n        model: model\n      });\n    }\n    if (type === UpdateFormStatus.type || type === UpdateForm.type) {\n      nextState = setValue(nextState, `${event.payload.path}.status`, event.payload.status);\n    }\n    if (type === UpdateFormErrors.type || type === UpdateForm.type) {\n      nextState = setValue(nextState, `${event.payload.path}.errors`, {\n        ...event.payload.errors\n      });\n    }\n    if (type === UpdateFormDirty.type || type === UpdateForm.type) {\n      nextState = setValue(nextState, `${event.payload.path}.dirty`, event.payload.dirty);\n    }\n    if (type === SetFormDirty.type) {\n      nextState = setValue(nextState, `${event.payload}.dirty`, true);\n    }\n    if (type === SetFormPristine.type) {\n      nextState = setValue(nextState, `${event.payload}.dirty`, false);\n    }\n    if (type === SetFormDisabled.type) {\n      nextState = setValue(nextState, `${event.payload}.disabled`, true);\n    }\n    if (type === SetFormEnabled.type) {\n      nextState = setValue(nextState, `${event.payload}.disabled`, false);\n    }\n    return next(nextState, event);\n  }\n  joinPathWithPropertyPath({\n    payload\n  }) {\n    let path = `${payload.path}.model`;\n    if (payload.propertyPath) {\n      path += `.${payload.propertyPath}`;\n    }\n    return path;\n  }\n  /** @nocollapse */\n  static ɵfac = function NgxsFormPlugin_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgxsFormPlugin)();\n  };\n  /** @nocollapse */\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgxsFormPlugin,\n    factory: NgxsFormPlugin.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxsFormPlugin, [{\n    type: Injectable\n  }], null, null);\n})();\nfunction isObjectLike(target) {\n  return target !== null && typeof target === 'object';\n}\nclass NgxsFormDirective {\n  path = null;\n  set debounce(debounce) {\n    this._debounce = Number(debounce);\n  }\n  get debounce() {\n    return this._debounce;\n  }\n  _debounce = 100;\n  set clearDestroy(val) {\n    this._clearDestroy = val != null && `${val}` !== 'false';\n  }\n  get clearDestroy() {\n    return this._clearDestroy;\n  }\n  _clearDestroy = false;\n  _updating = false;\n  _actions$ = inject(Actions);\n  _store = inject(Store);\n  _formGroupDirective = inject(FormGroupDirective);\n  _cd = inject(ChangeDetectorRef);\n  _destroyRef = inject(DestroyRef);\n  constructor() {\n    this._destroyRef.onDestroy(() => {\n      if (this.clearDestroy) {\n        this._store.dispatch(new UpdateForm({\n          path: this.path,\n          value: null,\n          dirty: null,\n          status: null,\n          errors: null\n        }));\n      }\n    });\n  }\n  ngOnInit() {\n    const resetForm$ = this._actions$.pipe(ofActionDispatched(ResetForm), takeUntilDestroyed(this._destroyRef));\n    resetForm$.subscribe(action => {\n      if (action.payload.path !== this.path) {\n        return;\n      }\n      this.form.reset(action.payload.value);\n      this.updateFormStateWithRawValue(true);\n      this._cd.markForCheck();\n    });\n    this.getStateStream(`${this.path}.model`).subscribe(model => {\n      if (this._updating || !model) {\n        return;\n      }\n      this.form.patchValue(model);\n      this._cd.markForCheck();\n    });\n    this.getStateStream(`${this.path}.dirty`).subscribe(dirty => {\n      if (this.form.dirty === dirty || typeof dirty !== 'boolean') {\n        return;\n      }\n      if (dirty) {\n        this.form.markAsDirty();\n      } else {\n        this.form.markAsPristine();\n      }\n      this._cd.markForCheck();\n    });\n    // On first state change, sync form model, status and dirty with state\n    this._store.selectOnce(state => getValue(state, this.path)).pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => {\n      this._store.dispatch([new UpdateFormValue({\n        path: this.path,\n        value: this.form.getRawValue()\n      }), new UpdateFormStatus({\n        path: this.path,\n        status: this.form.status\n      }), new UpdateFormDirty({\n        path: this.path,\n        dirty: this.form.dirty\n      })]);\n    });\n    this.getStateStream(`${this.path}.disabled`).subscribe(disabled => {\n      if (this.form.disabled === disabled || typeof disabled !== 'boolean') {\n        return;\n      }\n      if (disabled) {\n        this.form.disable();\n      } else {\n        this.form.enable();\n      }\n      this._cd.markForCheck();\n    });\n    this._formGroupDirective.valueChanges.pipe(distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)), this.debounceChange()).subscribe(() => {\n      this.updateFormStateWithRawValue();\n    });\n    this._formGroupDirective.statusChanges.pipe(distinctUntilChanged(), this.debounceChange()).subscribe(status => {\n      this._store.dispatch(new UpdateFormStatus({\n        status,\n        path: this.path\n      }));\n    });\n  }\n  updateFormStateWithRawValue(withFormStatus) {\n    if (this._updating) return;\n    const value = this._formGroupDirective.control.getRawValue();\n    const actions = [new UpdateFormValue({\n      path: this.path,\n      value\n    }), new UpdateFormDirty({\n      path: this.path,\n      dirty: this._formGroupDirective.dirty\n    }), new UpdateFormErrors({\n      path: this.path,\n      errors: this._formGroupDirective.errors\n    })];\n    if (withFormStatus) {\n      actions.push(new UpdateFormStatus({\n        path: this.path,\n        status: this._formGroupDirective.status\n      }));\n    }\n    this._updating = true;\n    this._store.dispatch(actions).subscribe({\n      error: () => this._updating = false,\n      complete: () => this._updating = false\n    });\n  }\n  debounceChange() {\n    const skipDebounceTime = this._formGroupDirective.control.updateOn !== 'change' || this._debounce < 0;\n    return skipDebounceTime ? change => change.pipe(takeUntilDestroyed(this._destroyRef)) : change => change.pipe(debounceTime(this._debounce), takeUntilDestroyed(this._destroyRef));\n  }\n  get form() {\n    return this._formGroupDirective.form;\n  }\n  getStateStream(path) {\n    return this._store.select(state => getValue(state, path)).pipe(takeUntilDestroyed(this._destroyRef));\n  }\n  /** @nocollapse */\n  static ɵfac = function NgxsFormDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgxsFormDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgxsFormDirective,\n    selectors: [[\"\", \"ngxsForm\", \"\"]],\n    inputs: {\n      path: [0, \"ngxsForm\", \"path\"],\n      debounce: [0, \"ngxsFormDebounce\", \"debounce\"],\n      clearDestroy: [0, \"ngxsFormClearOnDestroy\", \"clearDestroy\"]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxsFormDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxsForm]',\n      standalone: true\n    }]\n  }], () => [], {\n    path: [{\n      type: Input,\n      args: ['ngxsForm']\n    }],\n    debounce: [{\n      type: Input,\n      args: ['ngxsFormDebounce']\n    }],\n    clearDestroy: [{\n      type: Input,\n      args: ['ngxsFormClearOnDestroy']\n    }]\n  });\n})();\nclass NgxsFormPluginModule {\n  static forRoot() {\n    return {\n      ngModule: NgxsFormPluginModule,\n      providers: [withNgxsPlugin(NgxsFormPlugin)]\n    };\n  }\n  /** @nocollapse */\n  static ɵfac = function NgxsFormPluginModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgxsFormPluginModule)();\n  };\n  /** @nocollapse */\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxsFormPluginModule,\n    imports: [NgxsFormDirective],\n    exports: [NgxsFormDirective]\n  });\n  /** @nocollapse */\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxsFormPluginModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgxsFormDirective],\n      exports: [NgxsFormDirective]\n    }]\n  }], null, null);\n})();\nfunction withNgxsFormPlugin() {\n  return withNgxsPlugin(NgxsFormPlugin);\n}\n\n/**\n * The public api for consumers of @ngxs/form-plugin\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxsFormDirective, NgxsFormPlugin, NgxsFormPluginModule, ResetForm, SetFormDirty, SetFormDisabled, SetFormEnabled, SetFormPristine, UpdateForm, UpdateFormDirty, UpdateFormErrors, UpdateFormStatus, UpdateFormValue, withNgxsFormPlugin };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAM,mBAAN,MAAuB;AAAA,EACrB;AAAA,EACA,OAAO,OAAO;AAAA,EACd,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AACF;AACA,IAAM,kBAAN,MAAsB;AAAA,EACpB;AAAA,EACA,OAAO,OAAO;AAAA,EACd,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AACF;AACA,IAAM,aAAN,MAAiB;AAAA,EACf;AAAA,EACA,OAAO,OAAO;AAAA,EACd,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AACF;AACA,IAAM,kBAAN,MAAsB;AAAA,EACpB;AAAA,EACA,OAAO,OAAO;AAAA,EACd,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AACF;AACA,IAAM,eAAN,MAAmB;AAAA,EACjB;AAAA,EACA,OAAO,OAAO;AAAA,EACd,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AACF;AACA,IAAM,kBAAN,MAAsB;AAAA,EACpB;AAAA,EACA,OAAO,OAAO;AAAA,EACd,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AACF;AACA,IAAM,mBAAN,MAAuB;AAAA,EACrB;AAAA,EACA,OAAO,OAAO;AAAA,EACd,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AACF;AACA,IAAM,kBAAN,MAAsB;AAAA,EACpB;AAAA,EACA,OAAO,OAAO;AAAA,EACd,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AACF;AACA,IAAM,iBAAN,MAAqB;AAAA,EACnB;AAAA,EACA,OAAO,OAAO;AAAA,EACd,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AACF;AACA,IAAM,YAAN,MAAgB;AAAA,EACd;AAAA,EACA,OAAO,OAAO;AAAA,EACd,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AACF;AACA,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,OAAO,OAAO,OAAO,MAAM;AACzB,UAAM,OAAO,0BAA0B,KAAK;AAC5C,QAAI,YAAY;AAChB,QAAI,SAAS,gBAAgB,QAAQ,SAAS,WAAW,QAAQ,SAAS,UAAU,MAAM;AACxF,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,MAAM;AACV,YAAM,eAAe,MAAM,QAAQ,KAAK,IAAI,MAAM,MAAM,IAAI,aAAa,KAAK,IAAI,mBAC7E,SACD;AACJ,YAAM,OAAO,KAAK,yBAAyB,KAAK;AAChD,kBAAY,SAAS,WAAW,MAAM,YAAY;AAAA,IACpD;AACA,QAAI,SAAS,UAAU,MAAM;AAC3B,YAAM,QAAQ,SAAS,WAAW,GAAG,MAAM,QAAQ,IAAI,QAAQ;AAC/D,kBAAY,SAAS,WAAW,GAAG,MAAM,QAAQ,IAAI,IAAI;AAAA,QACvD;AAAA,MACF,CAAC;AAAA,IACH;AACA,QAAI,SAAS,iBAAiB,QAAQ,SAAS,WAAW,MAAM;AAC9D,kBAAY,SAAS,WAAW,GAAG,MAAM,QAAQ,IAAI,WAAW,MAAM,QAAQ,MAAM;AAAA,IACtF;AACA,QAAI,SAAS,iBAAiB,QAAQ,SAAS,WAAW,MAAM;AAC9D,kBAAY,SAAS,WAAW,GAAG,MAAM,QAAQ,IAAI,WAAW,mBAC3D,MAAM,QAAQ,OAClB;AAAA,IACH;AACA,QAAI,SAAS,gBAAgB,QAAQ,SAAS,WAAW,MAAM;AAC7D,kBAAY,SAAS,WAAW,GAAG,MAAM,QAAQ,IAAI,UAAU,MAAM,QAAQ,KAAK;AAAA,IACpF;AACA,QAAI,SAAS,aAAa,MAAM;AAC9B,kBAAY,SAAS,WAAW,GAAG,MAAM,OAAO,UAAU,IAAI;AAAA,IAChE;AACA,QAAI,SAAS,gBAAgB,MAAM;AACjC,kBAAY,SAAS,WAAW,GAAG,MAAM,OAAO,UAAU,KAAK;AAAA,IACjE;AACA,QAAI,SAAS,gBAAgB,MAAM;AACjC,kBAAY,SAAS,WAAW,GAAG,MAAM,OAAO,aAAa,IAAI;AAAA,IACnE;AACA,QAAI,SAAS,eAAe,MAAM;AAChC,kBAAY,SAAS,WAAW,GAAG,MAAM,OAAO,aAAa,KAAK;AAAA,IACpE;AACA,WAAO,KAAK,WAAW,KAAK;AAAA,EAC9B;AAAA,EACA,yBAAyB;AAAA,IACvB;AAAA,EACF,GAAG;AACD,QAAI,OAAO,GAAG,QAAQ,IAAI;AAC1B,QAAI,QAAQ,cAAc;AACxB,cAAQ,IAAI,QAAQ,YAAY;AAAA,IAClC;AACA,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,OAAO,OAAO,SAAS,uBAAuB,mBAAmB;AAC/D,WAAO,KAAK,qBAAqB,iBAAgB;AAAA,EACnD;AAAA;AAAA,EAEA,OAAO,QAA0B,mBAAmB;AAAA,IAClD,OAAO;AAAA,IACP,SAAS,gBAAe;AAAA,EAC1B,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,SAAS,aAAa,QAAQ;AAC5B,SAAO,WAAW,QAAQ,OAAO,WAAW;AAC9C;AACA,IAAM,oBAAN,MAAM,mBAAkB;AAAA,EACtB,OAAO;AAAA,EACP,IAAI,SAAS,UAAU;AACrB,SAAK,YAAY,OAAO,QAAQ;AAAA,EAClC;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EACd;AAAA,EACA,YAAY;AAAA,EACZ,IAAI,aAAa,KAAK;AACpB,SAAK,gBAAgB,OAAO,QAAQ,GAAG,GAAG,OAAO;AAAA,EACnD;AAAA,EACA,IAAI,eAAe;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,gBAAgB;AAAA,EAChB,YAAY;AAAA,EACZ,YAAY,OAAO,OAAO;AAAA,EAC1B,SAAS,OAAO,KAAK;AAAA,EACrB,sBAAsB,OAAO,kBAAkB;AAAA,EAC/C,MAAM,OAAO,iBAAiB;AAAA,EAC9B,cAAc,OAAO,UAAU;AAAA,EAC/B,cAAc;AACZ,SAAK,YAAY,UAAU,MAAM;AAC/B,UAAI,KAAK,cAAc;AACrB,aAAK,OAAO,SAAS,IAAI,WAAW;AAAA,UAClC,MAAM,KAAK;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,QACV,CAAC,CAAC;AAAA,MACJ;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,WAAW;AACT,UAAM,aAAa,KAAK,UAAU,KAAK,mBAAmB,SAAS,GAAG,mBAAmB,KAAK,WAAW,CAAC;AAC1G,eAAW,UAAU,YAAU;AAC7B,UAAI,OAAO,QAAQ,SAAS,KAAK,MAAM;AACrC;AAAA,MACF;AACA,WAAK,KAAK,MAAM,OAAO,QAAQ,KAAK;AACpC,WAAK,4BAA4B,IAAI;AACrC,WAAK,IAAI,aAAa;AAAA,IACxB,CAAC;AACD,SAAK,eAAe,GAAG,KAAK,IAAI,QAAQ,EAAE,UAAU,WAAS;AAC3D,UAAI,KAAK,aAAa,CAAC,OAAO;AAC5B;AAAA,MACF;AACA,WAAK,KAAK,WAAW,KAAK;AAC1B,WAAK,IAAI,aAAa;AAAA,IACxB,CAAC;AACD,SAAK,eAAe,GAAG,KAAK,IAAI,QAAQ,EAAE,UAAU,WAAS;AAC3D,UAAI,KAAK,KAAK,UAAU,SAAS,OAAO,UAAU,WAAW;AAC3D;AAAA,MACF;AACA,UAAI,OAAO;AACT,aAAK,KAAK,YAAY;AAAA,MACxB,OAAO;AACL,aAAK,KAAK,eAAe;AAAA,MAC3B;AACA,WAAK,IAAI,aAAa;AAAA,IACxB,CAAC;AAED,SAAK,OAAO,WAAW,WAAS,SAAS,OAAO,KAAK,IAAI,CAAC,EAAE,KAAK,mBAAmB,KAAK,WAAW,CAAC,EAAE,UAAU,MAAM;AACrH,WAAK,OAAO,SAAS,CAAC,IAAI,gBAAgB;AAAA,QACxC,MAAM,KAAK;AAAA,QACX,OAAO,KAAK,KAAK,YAAY;AAAA,MAC/B,CAAC,GAAG,IAAI,iBAAiB;AAAA,QACvB,MAAM,KAAK;AAAA,QACX,QAAQ,KAAK,KAAK;AAAA,MACpB,CAAC,GAAG,IAAI,gBAAgB;AAAA,QACtB,MAAM,KAAK;AAAA,QACX,OAAO,KAAK,KAAK;AAAA,MACnB,CAAC,CAAC,CAAC;AAAA,IACL,CAAC;AACD,SAAK,eAAe,GAAG,KAAK,IAAI,WAAW,EAAE,UAAU,cAAY;AACjE,UAAI,KAAK,KAAK,aAAa,YAAY,OAAO,aAAa,WAAW;AACpE;AAAA,MACF;AACA,UAAI,UAAU;AACZ,aAAK,KAAK,QAAQ;AAAA,MACpB,OAAO;AACL,aAAK,KAAK,OAAO;AAAA,MACnB;AACA,WAAK,IAAI,aAAa;AAAA,IACxB,CAAC;AACD,SAAK,oBAAoB,aAAa,KAAK,qBAAqB,CAAC,GAAG,MAAM,KAAK,UAAU,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,GAAG,KAAK,eAAe,CAAC,EAAE,UAAU,MAAM;AACzJ,WAAK,4BAA4B;AAAA,IACnC,CAAC;AACD,SAAK,oBAAoB,cAAc,KAAK,qBAAqB,GAAG,KAAK,eAAe,CAAC,EAAE,UAAU,YAAU;AAC7G,WAAK,OAAO,SAAS,IAAI,iBAAiB;AAAA,QACxC;AAAA,QACA,MAAM,KAAK;AAAA,MACb,CAAC,CAAC;AAAA,IACJ,CAAC;AAAA,EACH;AAAA,EACA,4BAA4B,gBAAgB;AAC1C,QAAI,KAAK,UAAW;AACpB,UAAM,QAAQ,KAAK,oBAAoB,QAAQ,YAAY;AAC3D,UAAM,UAAU,CAAC,IAAI,gBAAgB;AAAA,MACnC,MAAM,KAAK;AAAA,MACX;AAAA,IACF,CAAC,GAAG,IAAI,gBAAgB;AAAA,MACtB,MAAM,KAAK;AAAA,MACX,OAAO,KAAK,oBAAoB;AAAA,IAClC,CAAC,GAAG,IAAI,iBAAiB;AAAA,MACvB,MAAM,KAAK;AAAA,MACX,QAAQ,KAAK,oBAAoB;AAAA,IACnC,CAAC,CAAC;AACF,QAAI,gBAAgB;AAClB,cAAQ,KAAK,IAAI,iBAAiB;AAAA,QAChC,MAAM,KAAK;AAAA,QACX,QAAQ,KAAK,oBAAoB;AAAA,MACnC,CAAC,CAAC;AAAA,IACJ;AACA,SAAK,YAAY;AACjB,SAAK,OAAO,SAAS,OAAO,EAAE,UAAU;AAAA,MACtC,OAAO,MAAM,KAAK,YAAY;AAAA,MAC9B,UAAU,MAAM,KAAK,YAAY;AAAA,IACnC,CAAC;AAAA,EACH;AAAA,EACA,iBAAiB;AACf,UAAM,mBAAmB,KAAK,oBAAoB,QAAQ,aAAa,YAAY,KAAK,YAAY;AACpG,WAAO,mBAAmB,YAAU,OAAO,KAAK,mBAAmB,KAAK,WAAW,CAAC,IAAI,YAAU,OAAO,KAAK,aAAa,KAAK,SAAS,GAAG,mBAAmB,KAAK,WAAW,CAAC;AAAA,EAClL;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,oBAAoB;AAAA,EAClC;AAAA,EACA,eAAe,MAAM;AACnB,WAAO,KAAK,OAAO,OAAO,WAAS,SAAS,OAAO,IAAI,CAAC,EAAE,KAAK,mBAAmB,KAAK,WAAW,CAAC;AAAA,EACrG;AAAA;AAAA,EAEA,OAAO,OAAO,SAAS,0BAA0B,mBAAmB;AAClE,WAAO,KAAK,qBAAqB,oBAAmB;AAAA,EACtD;AAAA;AAAA,EAEA,OAAO,OAAyB,kBAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,YAAY,EAAE,CAAC;AAAA,IAChC,QAAQ;AAAA,MACN,MAAM,CAAC,GAAG,YAAY,MAAM;AAAA,MAC5B,UAAU,CAAC,GAAG,oBAAoB,UAAU;AAAA,MAC5C,cAAc,CAAC,GAAG,0BAA0B,cAAc;AAAA,IAC5D;AAAA,EACF,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,mBAAmB,CAAC;AAAA,IAC1F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,MACN,MAAM,CAAC,UAAU;AAAA,IACnB,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,kBAAkB;AAAA,IAC3B,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,MACN,MAAM,CAAC,wBAAwB;AAAA,IACjC,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,uBAAN,MAAM,sBAAqB;AAAA,EACzB,OAAO,UAAU;AACf,WAAO;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC,eAAe,cAAc,CAAC;AAAA,IAC5C;AAAA,EACF;AAAA;AAAA,EAEA,OAAO,OAAO,SAAS,6BAA6B,mBAAmB;AACrE,WAAO,KAAK,qBAAqB,uBAAsB;AAAA,EACzD;AAAA;AAAA,EAEA,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,MAAM;AAAA,IACN,SAAS,CAAC,iBAAiB;AAAA,IAC3B,SAAS,CAAC,iBAAiB;AAAA,EAC7B,CAAC;AAAA;AAAA,EAED,OAAO,OAAyB,iBAAiB,CAAC,CAAC;AACrD;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,sBAAsB,CAAC;AAAA,IAC7F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,iBAAiB;AAAA,MAC3B,SAAS,CAAC,iBAAiB;AAAA,IAC7B,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,SAAS,qBAAqB;AAC5B,SAAO,eAAe,cAAc;AACtC;",
  "names": []
}
